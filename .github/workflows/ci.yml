name: MLflow Project CI & Docker

on:
  push:
    paths:
      - 'MLproject/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

jobs:
  train-and-docker:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: mariouskono/workflow-ci
      DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # <--- GANTI BARIS INI dari 3.12 ke 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Pastikan pyarrow diinstal sebagai biner (ini sudah benar dari perbaikan sebelumnya)
          pip install --only-binary=:all: pyarrow

          # Turunkan versi MLflow ke 2.11.1 untuk memperbaiki bug '[Errno 13] Permission denied: '/C:'
          pip install "mlflow==2.11.1" # <--- UBAH VERSI MLFLOW DI SINI

          # Sesuaikan dependensi lainnya agar kompatibel dengan mlflow 2.11.1 di Python 3.10
          pip install "cloudpickle<3" # Biasanya mlflow 2.x membutuhkan cloudpickle versi lebih lama
          pip install "numpy<2" # numpy 2.x mungkin terlalu baru untuk mlflow 2.x
          pip install "pandas<2" # pandas 2.x mungkin terlalu baru untuk mlflow 2.x
          pip install "scikit-learn<1.3" # scikit-learn 1.7.0 mungkin terlalu baru untuk mlflow 2.x
          pip install "scipy<1.11" # scipy 1.15.3 mungkin terlalu baru untuk mlflow 2.x
          pip install "joblib<1.3" # joblib 1.5.1 mungkin terlalu baru untuk mlflow 2.x
          pip install "python-dotenv==1.0.0"
          pip install dagshub
          pip install matplotlib
          pip install seaborn

      - name: Verify installation
        run: |
          python -c "import numpy, pandas, sklearn, matplotlib, seaborn, mlflow, joblib; print('âœ… All packages imported successfully')"

      - name: Force MLflow to use local tracking in CI
        run: |
          WORKSPACE_DIR=$(pwd)
          echo "MLFLOW_TRACKING_URI=file://$WORKSPACE_DIR/MLproject/mlruns" >> $GITHUB_ENV
          echo "MLFLOW_ARTIFACT_URI=file://$WORKSPACE_DIR/MLproject/mlruns" >> $GITHUB_ENV

      - name: Clean up previous mlruns and ensure directory exists
        run: |
          # Hapus direktori mlruns sebelumnya dan buat ulang
          rm -rf MLproject/mlruns # Menghapus setiap instalasi mlruns sebelumnya
          mkdir -p MLproject/mlruns # Memastikan direktori ada dengan izin yang benar
          echo "--- Permissions of MLproject/mlruns ---"
          ls -ld MLproject/mlruns # Mencetak izin direktori
          echo "Final MLFLOW_TRACKING_URI dari env: $MLFLOW_TRACKING_URI"
          echo "Final MLFLOW_ARTIFACT_URI dari env: $MLFLOW_ARTIFACT_URI"

      - name: Run MLflow Project and Get Run ID
        id: mlflow_run_step
        run: |
          set -x # Mengaktifkan mode debug shell
          cd MLproject
          
          echo "### Debugging MLproject Directory and Script Execution ###"
          echo "--- Listing contents of MLproject/ with file types ---"
          ls -al .
          echo "--- Content of MLproject file (raw) ---"
          cat MLproject || echo "MLproject file not found or cannot be read."
          echo "--- Attempting to run modelling.py directly ---"
          set +e
          python modelling.py --data_path dataset_tempat_wisata_bali_processed.csv
          PYTHON_DIRECT_RUN_EXIT_CODE=$?
          set -e
          echo "modelling.py direct run exit code: $PYTHON_DIRECT_RUN_EXIT_CODE"

          echo "--- Attempting MLflow Run with verbose output ---"
          MLFLOW_RUN_OUTPUT=$(MLFLOW_VERBOSE=1 mlflow run . --env-manager=local 2>&1)
          echo "$MLFLOW_RUN_OUTPUT"

          RUN_ID=$(echo "$MLFLOW_RUN_OUTPUT" | grep "=== Run (ID" | awk -F"'" '{print $2}')
          echo "mlflow_run_id=$RUN_ID" >> $GITHUB_OUTPUT
        continue-on-error: true # Tetap aktifkan ini untuk melihat semua output debug

      - name: Build Docker Image from MLflow Model
        run: |
          cd MLproject
          mlflow models build-docker -m "mlruns/0/${{ steps.mlflow_run_step.outputs.mlflow_run_id }}/artifacts/tfidf_model" -n ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: MLproject/**/*.joblib
